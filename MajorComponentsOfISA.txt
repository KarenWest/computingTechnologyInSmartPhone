The major components of the ISA are threefold.
The first is the instruction set.
This tells us the opcodes, the operations that
are supported, the types of data that are supported,
as well as the addressing modes, which indicates how we form memory addresses.
The second are the registers.
This is the number of registers, their width, and how they are used.
Some registers might be general purpose, others may have a special purpose.
And finally, the organization of the memory,
which is the address space, the number of locations that can be addressed,
as well as what's called the addressability,
which is the number of bits that are stored in every location in memory.
Let's go over the registers and memory of the LC-3.
In terms of registers, first there are eight general purpose registers.
We call those R0 through R7, and those are each 16 bits wide.
And we have some special purpose registers.
One is the program counter, or PC.
Remember, in a von Neumann machine that's a key part of our control unit.
And the other register is the condition code register.
This has different bits which tells us something about our result.
Now, these two registers are not directly addressable by the programmer,
but they can be used and affected by instructions.
In terms of memory, our address space has 2 to the 16 locations,
because we have a 16-bit address.
And the addressability is 16 bits.
Every location in LC-3 is defined to be 16 bits wide in memory.
Here are more details of the LC-3 instruction set.
In terms of opcodes, we have three types of operate opcodes, ADD, AND, and NOT.
For data movement instructions, we have seven of those.
Three that are load instructions, three that are store instructions,
and then a last type called load effective address,
which actually doesn't change memory but loads an address into a register.
In terms of control instructions, we have BR, JMP, TRAP, and then
several others.
Now, some of these opcodes clear or set the condition codes
based on the result.
So any opcode, any operation, that writes a register
will change the condition codes.
Now, we have three condition codes.
One N bit for negative, a Z bit for 0, and a P bit for positive,
and for that we mean greater than 0.
So one, and only one, of these bits will be set and the others will be cleared
depending on the result.
In terms of data type, the only type we have in the LC-3
are 16-bit 2's complement integer.
Now, other instruction sets will have other types,
such as floating point numbers, but for LC-3, we only have integers.
In terms of addressing modes, for non-memory addresses we
have immediate and register, those are for operate instructions.
And for memory addresses, for loads and stores, we have three types.
PC-relative, indirect, and base+offset.